/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/MDIApplication.java to edit this template
 */
package ec.edu.ups.practica.laboratorio.cinco.vista.principal;

import ec.edu.ups.practica.laboratorio.cinco.controlador.ControladorCantante;
import ec.edu.ups.practica.laboratorio.cinco.controlador.ControladorCompositor;
import ec.edu.ups.practica.laboratorio.cinco.controlador.ControladorPersona;
import ec.edu.ups.practica.laboratorio.cinco.dao.CantanteDAO;
import ec.edu.ups.practica.laboratorio.cinco.dao.CompositorDAO;
import ec.edu.ups.practica.laboratorio.cinco.dao.PersonaDAO;
import ec.edu.ups.practica.laboratorio.cinco.vista.cantante.VentanaActualizarCantante;
import ec.edu.ups.practica.laboratorio.cinco.vista.cantante.VentanaBuscarCantante;
import ec.edu.ups.practica.laboratorio.cinco.vista.cantante.VentanaEliminarCantante;
import ec.edu.ups.practica.laboratorio.cinco.vista.cantante.VentanaIngresoCantante;
import ec.edu.ups.practica.laboratorio.cinco.vista.cantante.VentanaListarCantante;
import ec.edu.ups.practica.laboratorio.cinco.vista.compositor.VentanaActualizarCompositor;
import ec.edu.ups.practica.laboratorio.cinco.vista.compositor.VentanaBuscarCompositor;
import ec.edu.ups.practica.laboratorio.cinco.vista.compositor.VentanaEliminarCompositor;
import ec.edu.ups.practica.laboratorio.cinco.vista.compositor.VentanaIngresoCompositor;
import ec.edu.ups.practica.laboratorio.cinco.vista.compositor.VentanaListarCompositor;
import ec.edu.ups.practica.laboratorio.cinco.vista.persona.VentanaBuscarCantanteDisco;
import ec.edu.ups.practica.laboratorio.cinco.vista.persona.VentanaBuscarCompositorCancion;

/**
 *
 * @author PhD. Gabriel A. Le√≥n Paredes
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    //ventanas personas
    private VentanaBuscarCantanteDisco ventanaBuscarCantanteDisco;
    private VentanaBuscarCompositorCancion ventanaBuscarCompositorCancion;
    //ventanas cantante
    private VentanaIngresoCantante ventanaIngresoCantante;
    private VentanaBuscarCantante ventanaBuscarCantante;
    private VentanaActualizarCantante ventanaActualizarCantante;
    private VentanaEliminarCantante ventanaEliminarCantante;
    private VentanaListarCantante ventanaListarCantante;
    //ventanas compositor
    private VentanaIngresoCompositor ventanaIngresoCompositor;
    private VentanaBuscarCompositor ventanaBuscarCompositor;
    private VentanaActualizarCompositor ventanaActualizarCompositor;
    private VentanaEliminarCompositor ventanaEliminarCompositor;
    private VentanaListarCompositor ventanaListarCompositor;
    //controladores
    private ControladorCantante controladorCantante;
    private ControladorCompositor controladorCompositor;
    private ControladorPersona controladorPersona;
    //DAOs
    private CantanteDAO cantanteDAO;
    private CompositorDAO compositorDAO;
    private PersonaDAO personaDAO;

    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        initComponents();
        
        controladorPersona = new ControladorPersona(personaDAO);
        controladorCantante = new ControladorCantante(cantanteDAO);
        controladorCompositor = new ControladorCompositor(compositorDAO);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        escritorio = new javax.swing.JDesktopPane();
        menuBar = new javax.swing.JMenuBar();
        menuPersona = new javax.swing.JMenu();
        menuItemBuscarCantanteDisco = new javax.swing.JMenuItem();
        menuItemBuscarCompositorCancion = new javax.swing.JMenuItem();
        menuOperadora = new javax.swing.JMenu();
        menuItemAgregarCantante = new javax.swing.JMenuItem();
        menuItemBuscarCantante = new javax.swing.JMenuItem();
        menuItemActualizarCantante = new javax.swing.JMenuItem();
        menuItemEliminarCantante = new javax.swing.JMenuItem();
        menuItemListarCantante = new javax.swing.JMenuItem();
        menuTelefono = new javax.swing.JMenu();
        menuItemIngresarCompositor = new javax.swing.JMenuItem();
        menuItemBuscarCompositor = new javax.swing.JMenuItem();
        menuItemActualizarCompositor = new javax.swing.JMenuItem();
        menuItemEliminarCompositor = new javax.swing.JMenuItem();
        menuItemListarCompositor = new javax.swing.JMenuItem();
        menuOpciones = new javax.swing.JMenu();
        menuItemSalirOpciones = new javax.swing.JMenuItem();

        jMenu1.setText("jMenu1");

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        menuPersona.setMnemonic('f');
        menuPersona.setText("Persona");

        menuItemBuscarCantanteDisco.setText("Buscar Cantante");
        menuItemBuscarCantanteDisco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemBuscarCantanteDiscoActionPerformed(evt);
            }
        });
        menuPersona.add(menuItemBuscarCantanteDisco);

        menuItemBuscarCompositorCancion.setText("Buscar Compositor");
        menuItemBuscarCompositorCancion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemBuscarCompositorCancionActionPerformed(evt);
            }
        });
        menuPersona.add(menuItemBuscarCompositorCancion);

        menuBar.add(menuPersona);

        menuOperadora.setMnemonic('e');
        menuOperadora.setText("Cantante");

        menuItemAgregarCantante.setMnemonic('t');
        menuItemAgregarCantante.setText("Agregar");
        menuItemAgregarCantante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemAgregarCantanteActionPerformed(evt);
            }
        });
        menuOperadora.add(menuItemAgregarCantante);

        menuItemBuscarCantante.setMnemonic('p');
        menuItemBuscarCantante.setText("Buscar");
        menuItemBuscarCantante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemBuscarCantanteActionPerformed(evt);
            }
        });
        menuOperadora.add(menuItemBuscarCantante);

        menuItemActualizarCantante.setMnemonic('y');
        menuItemActualizarCantante.setText("Actualizar");
        menuItemActualizarCantante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemActualizarCantanteActionPerformed(evt);
            }
        });
        menuOperadora.add(menuItemActualizarCantante);

        menuItemEliminarCantante.setMnemonic('d');
        menuItemEliminarCantante.setText("Eliminar");
        menuItemEliminarCantante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemEliminarCantanteActionPerformed(evt);
            }
        });
        menuOperadora.add(menuItemEliminarCantante);

        menuItemListarCantante.setText("Listar");
        menuItemListarCantante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemListarCantanteActionPerformed(evt);
            }
        });
        menuOperadora.add(menuItemListarCantante);

        menuBar.add(menuOperadora);

        menuTelefono.setMnemonic('h');
        menuTelefono.setText("Compositor");

        menuItemIngresarCompositor.setMnemonic('c');
        menuItemIngresarCompositor.setText("Ingresar");
        menuItemIngresarCompositor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemIngresarCompositorActionPerformed(evt);
            }
        });
        menuTelefono.add(menuItemIngresarCompositor);

        menuItemBuscarCompositor.setText("Buscar");
        menuItemBuscarCompositor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemBuscarCompositorActionPerformed(evt);
            }
        });
        menuTelefono.add(menuItemBuscarCompositor);

        menuItemActualizarCompositor.setMnemonic('a');
        menuItemActualizarCompositor.setText("Actualizar");
        menuItemActualizarCompositor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemActualizarCompositorActionPerformed(evt);
            }
        });
        menuTelefono.add(menuItemActualizarCompositor);

        menuItemEliminarCompositor.setText("Eliminar");
        menuItemEliminarCompositor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemEliminarCompositorActionPerformed(evt);
            }
        });
        menuTelefono.add(menuItemEliminarCompositor);

        menuItemListarCompositor.setText("Listar");
        menuItemListarCompositor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemListarCompositorActionPerformed(evt);
            }
        });
        menuTelefono.add(menuItemListarCompositor);

        menuBar.add(menuTelefono);

        menuOpciones.setText("Opciones");

        menuItemSalirOpciones.setText("Salir");
        menuItemSalirOpciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemSalirOpcionesActionPerformed(evt);
            }
        });
        menuOpciones.add(menuItemSalirOpciones);

        menuBar.add(menuOpciones);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(escritorio, javax.swing.GroupLayout.DEFAULT_SIZE, 981, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(escritorio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 661, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuItemSalirOpcionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemSalirOpcionesActionPerformed
        System.exit(0);
    }//GEN-LAST:event_menuItemSalirOpcionesActionPerformed

    private void menuItemAgregarCantanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemAgregarCantanteActionPerformed
        if (ventanaIngresoCantante == null) {
            ventanaIngresoCantante = new VentanaIngresoCantante(controladorCantante);
            escritorio.add(ventanaIngresoCantante);
        }

        ventanaIngresoCantante.setVisible(true);
    }//GEN-LAST:event_menuItemAgregarCantanteActionPerformed

    private void menuItemBuscarCantanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemBuscarCantanteActionPerformed
        if (ventanaBuscarCantante == null) {
            ventanaBuscarCantante = new VentanaBuscarCantante(controladorCantante);
            escritorio.add(ventanaBuscarCantante);
        }

        ventanaBuscarCantante.setVisible(true);
    }//GEN-LAST:event_menuItemBuscarCantanteActionPerformed

    private void menuItemActualizarCantanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemActualizarCantanteActionPerformed
         if (ventanaActualizarCantante == null) {
            ventanaActualizarCantante = new VentanaActualizarCantante(controladorCantante);
            escritorio.add(ventanaActualizarCantante);
        }

        ventanaActualizarCantante.setVisible(true);
    }//GEN-LAST:event_menuItemActualizarCantanteActionPerformed

    private void menuItemEliminarCantanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemEliminarCantanteActionPerformed
        if (ventanaEliminarCantante== null) {
            ventanaEliminarCantante = new VentanaEliminarCantante(controladorCantante);
            escritorio.add(ventanaEliminarCantante);
        }

        ventanaEliminarCantante.setVisible(true);
    }//GEN-LAST:event_menuItemEliminarCantanteActionPerformed

    private void menuItemListarCantanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemListarCantanteActionPerformed
        if (ventanaListarCantante== null) {
            ventanaListarCantante = new VentanaListarCantante(controladorCantante);
            escritorio.add(ventanaListarCantante);
        }

        ventanaListarCantante.setVisible(true);
    }//GEN-LAST:event_menuItemListarCantanteActionPerformed

    private void menuItemIngresarCompositorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemIngresarCompositorActionPerformed
         if (ventanaIngresoCompositor == null) {
            ventanaIngresoCompositor = new VentanaIngresoCompositor(controladorCompositor);
            escritorio.add(ventanaIngresoCompositor);
        }

        ventanaIngresoCompositor.setVisible(true);
    }//GEN-LAST:event_menuItemIngresarCompositorActionPerformed

    private void menuItemBuscarCompositorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemBuscarCompositorActionPerformed
        if (ventanaBuscarCompositor == null) {
            ventanaBuscarCompositor = new VentanaBuscarCompositor(controladorCompositor);
            escritorio.add(ventanaBuscarCompositor);
        }

        ventanaBuscarCompositor.setVisible(true);
    }//GEN-LAST:event_menuItemBuscarCompositorActionPerformed

    private void menuItemBuscarCompositorCancionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemBuscarCompositorCancionActionPerformed
        if (ventanaBuscarCompositorCancion == null) {
            ventanaBuscarCompositorCancion = new VentanaBuscarCompositorCancion(controladorCompositor);
            escritorio.add(ventanaBuscarCompositorCancion);
        }

        ventanaBuscarCompositorCancion.setVisible(true);
    }//GEN-LAST:event_menuItemBuscarCompositorCancionActionPerformed

    private void menuItemActualizarCompositorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemActualizarCompositorActionPerformed
        if (ventanaActualizarCompositor == null) {
            ventanaActualizarCompositor = new VentanaActualizarCompositor(controladorCompositor);
            escritorio.add(ventanaActualizarCompositor);
        }

        ventanaActualizarCompositor.setVisible(true);
    }//GEN-LAST:event_menuItemActualizarCompositorActionPerformed

    private void menuItemEliminarCompositorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemEliminarCompositorActionPerformed
        if (ventanaEliminarCompositor== null) {
            ventanaEliminarCompositor = new VentanaEliminarCompositor(controladorCompositor);
            escritorio.add(ventanaEliminarCompositor);
        }

        ventanaEliminarCompositor.setVisible(true);
    }//GEN-LAST:event_menuItemEliminarCompositorActionPerformed

    private void menuItemListarCompositorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemListarCompositorActionPerformed
        if (ventanaListarCompositor== null) {
            ventanaListarCompositor = new VentanaListarCompositor(controladorCompositor);
            escritorio.add(ventanaListarCompositor);
        }

        ventanaListarCompositor.setVisible(true);
    }//GEN-LAST:event_menuItemListarCompositorActionPerformed

    private void menuItemBuscarCantanteDiscoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemBuscarCantanteDiscoActionPerformed
        if (ventanaBuscarCantanteDisco == null) {
            ventanaBuscarCantanteDisco = new VentanaBuscarCantanteDisco(controladorCantante);
            escritorio.add(ventanaBuscarCantanteDisco);
        }

        ventanaBuscarCantanteDisco.setVisible(true);
    }//GEN-LAST:event_menuItemBuscarCantanteDiscoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JDesktopPane escritorio;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem menuItemActualizarCantante;
    private javax.swing.JMenuItem menuItemActualizarCompositor;
    private javax.swing.JMenuItem menuItemAgregarCantante;
    private javax.swing.JMenuItem menuItemBuscarCantante;
    private javax.swing.JMenuItem menuItemBuscarCantanteDisco;
    private javax.swing.JMenuItem menuItemBuscarCompositor;
    private javax.swing.JMenuItem menuItemBuscarCompositorCancion;
    private javax.swing.JMenuItem menuItemEliminarCantante;
    private javax.swing.JMenuItem menuItemEliminarCompositor;
    private javax.swing.JMenuItem menuItemIngresarCompositor;
    private javax.swing.JMenuItem menuItemListarCantante;
    private javax.swing.JMenuItem menuItemListarCompositor;
    private javax.swing.JMenuItem menuItemSalirOpciones;
    private javax.swing.JMenu menuOpciones;
    private javax.swing.JMenu menuOperadora;
    private javax.swing.JMenu menuPersona;
    private javax.swing.JMenu menuTelefono;
    // End of variables declaration//GEN-END:variables

}
